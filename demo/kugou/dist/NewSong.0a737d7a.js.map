{"version":3,"sources":["webpack:///./src/components/new_song/Slider.vue?b611","webpack:///./src/components/public/AppMusicList.vue?ccb9","webpack:///src/components/public/AppMusicList.vue","webpack:///./src/components/public/AppMusicList.vue?87fc","webpack:///./src/components/public/AppMusicList.vue","webpack:///./src/components/new_song/NewSong.vue?f7f5","webpack:///./src/components/public/AppMusicList.vue?5a3e","webpack:///./src/components/new_song/NewSong.vue?8501","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray.js","webpack:///./src/components/new_song/Slider.vue?3ff3","webpack:///./node_modules/@glidejs/glide/dist/glide.modular.esm.js","webpack:///src/components/new_song/Slider.vue","webpack:///./src/components/new_song/Slider.vue?01eb","webpack:///./src/components/new_song/Slider.vue","webpack:///src/components/new_song/NewSong.vue","webpack:///./src/components/new_song/NewSong.vue?a74c","webpack:///./src/components/new_song/NewSong.vue","webpack:///./src/mixins/loading.js","webpack:///./src/components/new_song/Slider.vue?e4d6"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Slider_vue_vue_type_style_index_1_id_810573d8_scoped_true_lang_less__WEBPACK_IMPORTED_MODULE_0___default","render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","index","key","on","click","$event","wantPlay","_t","data","_v","_s","filename","attrs","aria-hidden","xlink:href","staticRenderFns","AppMusicListvue_type_script_lang_js","name","props","musicList","type","Array","default","methods","music","$store","commit","$props","public_AppMusicListvue_type_script_lang_js","component","Object","componentNormalizer","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NewSong_vue_vue_type_style_index_0_id_4dd44df9_lang_less_scoped_true__WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppMusicList_vue_vue_type_style_index_0_id_39bf58b4_lang_less_scoped_true__WEBPACK_IMPORTED_MODULE_0___default","sliderData","music-list","newSongs","_arrayWithoutHoles","arr","isArray","i","arr2","length","_iterableToArray","iter","Symbol","iterator","prototype","toString","call","from","_nonIterableSpread","TypeError","_toConsumableArray","Slidervue_type_template_id_810573d8_scoped_true_render","touchstart","stopPropagation","ref","data-glide-el","href","extra","tourl","src","imgurl","alt","title","data-glide-dir","Slidervue_type_template_id_810573d8_scoped_true_staticRenderFns","defaults","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","obj","constructor","classCallCheck","instance","Constructor","createClass","defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","toInt","parseInt","toFloat","parseFloat","isString","isObject","isNumber","isFunction","isUndefined","mount","glide","extensions","events","components","_name","define","prop","definition","mergeOptions","settings","options","EventsBus","hop","event","handler","push","remove","context","emit","forEach","Glide","selector","_e","disabled","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","o","_i","_d","status","Components","Events","move","_this","calculate","after","isOffset","enable","steps","countableSteps","isEnd","isType","Math","min","isStart","_m","substr","Html","slides","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","Sizes","wrapper","children","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","root","track","querySelector","slice","filter","slide","classList","contains","_r","r","document","t","Peek","before","offset","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","dimention","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","sibling","removeClasses","items","collect","_Glide$settings","peekIncrementer","part","start","end","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","Resize","Binder","bind","unbind","off","destroy","VALID_DIRECTIONS","FLIPED_MOVEMENTS",">","<","=","resolve","token","split","join","addClass","removeClass","indexOf","Rtl","modify","Gap","Grow","Peeking","Focusing","mutator","TRANSFORMERS","concat","mutate","transformer","Translate","transform","compose","duration","transition","callback","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","swipe","swipeSin","swipeStartX","swipeStartY","passive","Swipe","bindSwipeStart","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","NAV_SELECTOR","CONTROLS_SELECTOR","controls","Controls","_n","querySelectorAll","addBindings","setActive","removeActive","removeBindings","elements","preventDefault","currentTarget","getAttribute","Autoplay","setInterval","stop","time","clearInterval","COMPONENTS","Glide$1","_Core","Glide$$1","glide_modular_esm","mounted","$nextTick","destroyed","new_song_Slidervue_type_script_lang_js","Slider","NewSongvue_type_script_lang_js","mixins","loading","computed","objectSpread","vuex_esm","created","setLoadingExcludeNav","startLoading","getNewSong","axios_default","a","api","newSong","then","_ref","replaceProperty","paths","banners","banner","stopLoading","AppMusicList","new_song_NewSongvue_type_script_lang_js","NewSong_component","updated","C_Users_xianshenglu_projects_vue_demo_kugou_node_modules_babel_runtime_helpers_builtin_es6_objectSpread__WEBPACK_IMPORTED_MODULE_0__","vuex__WEBPACK_IMPORTED_MODULE_1__","setLoadingExcludeHeader","setLoadingExcludeModuleTitle","setLoadingExcludeSearchForm","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_9_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_9_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_9_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Slider_vue_vue_type_style_index_0_id_810573d8_lang_sass_scoped_true__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"NewSong.0a737d7a.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=style&index=1&id=810573d8&scoped=true&lang=less\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=style&index=1&id=810573d8&scoped=true&lang=less\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"music_list\"},_vm._l((_vm.musicList),function(item,index){return _c('li',{key:index,staticClass:\"music_list__item main_border_bottom\"},[_c('div',{staticClass:\"music_list__info\",on:{\"click\":function($event){_vm.wantPlay(item)}}},[_vm._t(\"index\",null,{data:index}),_c('div',{staticClass:\"music_list__name\"},[_vm._v(_vm._s(item.filename))])],2),_c('button',{staticClass:\"music_list__download\"},[_c('svg',{staticClass:\"icon\",attrs:{\"aria-hidden\":\"true\"}},[_c('use',{attrs:{\"xlink:href\":\"#icon-download\"}})])])])}))}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <ul class=\"music_list\">\r\n    <li class=\"music_list__item main_border_bottom\" v-for=\"(item,index) in musicList\" :key=\"index\">\r\n      <div class=\"music_list__info\" @click=\"wantPlay(item)\">\r\n        <slot :data=\"index\" name=\"index\" class=\"music_list__index\" @click=\"wantPlay(item)\"></slot>\r\n        <div class=\"music_list__name\">{{item.filename}}</div>\r\n      </div>\r\n      <button class=\"music_list__download\">\r\n        <svg class=\"icon\" aria-hidden=\"true\">\r\n          <use xlink:href=\"#icon-download\"></use>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AppMusicList',\r\n  props: {\r\n    musicList: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    wantPlay(music) {\r\n      this.$store.commit('player/wantPlay', {\r\n        music,\r\n        musicList: this.$props.musicList\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n@import (reference) '../../assets/css/constant.less';\r\n.music_list {\r\n  padding-left: 19px;\r\n}\r\n\r\n.music_list__item {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: auto;\r\n  min-height: 72px;\r\n  padding: 10px 0;\r\n}\r\n\r\n.music_list__info {\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n}\r\n.music_list__index {\r\n  width: 48px;\r\n  flex: 0 0 auto;\r\n}\r\n.music_list__name {\r\n  width: calc(100% - 48px);\r\n  flex: 1 0 auto;\r\n}\r\n\r\n.music_list__download {\r\n  box-sizing: content-box;\r\n  width: 23px;\r\n  height: 100%;\r\n  padding: 0 @padding_width;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppMusicList.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppMusicList.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AppMusicList.vue?vue&type=template&id=39bf58b4&scoped=true\"\nimport script from \"./AppMusicList.vue?vue&type=script&lang=js\"\nexport * from \"./AppMusicList.vue?vue&type=script&lang=js\"\nimport style0 from \"./AppMusicList.vue?vue&type=style&index=0&id=39bf58b4&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39bf58b4\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSong.vue?vue&type=style&index=0&id=4dd44df9&lang=less&scoped=true\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSong.vue?vue&type=style&index=0&id=4dd44df9&lang=less&scoped=true\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppMusicList.vue?vue&type=style&index=0&id=39bf58b4&lang=less&scoped=true\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppMusicList.vue?vue&type=style&index=0&id=39bf58b4&lang=less&scoped=true\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"new_song\"},[_c('Slider',{staticClass:\"new_song__slider\",attrs:{\"data\":_vm.sliderData}}),_c('AppMusicList',{staticClass:\"new_song__music_list\",attrs:{\"music-list\":_vm.newSongs}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"slider\",on:{\"touchstart\":function($event){$event.stopPropagation();}}},[_c('div',{ref:\"glide\",staticClass:\"glide slider__body\"},[_c('div',{staticClass:\"glide__track slider__track\",attrs:{\"data-glide-el\":\"track\"}},[_c('ul',{staticClass:\"glide__slides slider__slides\"},_vm._l((_vm.data),function(item,index){return _c('li',{key:index,staticClass:\"glide__slide\"},[_c('a',{staticClass:\"slider__link\",attrs:{\"href\":item.extra.tourl}},[_c('img',{staticClass:\"slider__img\",attrs:{\"src\":item.imgurl,\"alt\":item.title}})])])}))]),_c('div',{staticClass:\"glide__bullets slider__bullets\",attrs:{\"data-glide-el\":\"controls[nav]\"}},_vm._l((_vm.data),function(item,index){return _c('button',{key:index,staticClass:\"glide__bullet\",attrs:{\"data-glide-dir\":'='+index}})}))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*!\n * Glide.js v3.2.7\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n\n            Events.emit('run.end', move);\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n\n            Events.emit('run.start', move);\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: value.substr(1) ? value.substr(1) : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      item.classList.add(settings.classes.activeNav);\n\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.activeNav);\n      });\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      if (controls[Glide.index]) {\n        controls[Glide.index].classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\nexport { swipe as Swipe, images as Images, anchors as Anchors, controls as Controls, keyboard as Keyboard, autoplay as Autoplay, breakpoints as Breakpoints };\n","<template>\r\n  <section class=\"slider\" @touchstart.stop>\r\n    <div class=\"glide slider__body\" ref=\"glide\">\r\n      <div class=\"glide__track slider__track\" data-glide-el=\"track\">\r\n        <ul class=\"glide__slides slider__slides\">\r\n          <li class=\"glide__slide\" v-for=\"(item,index) in data\" :key=\"index\">\r\n            <a :href=\"item.extra.tourl\" class=\"slider__link\">\r\n              <img :src=\"item.imgurl\" :alt=\"item.title\" class=\"slider__img\">\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"glide__bullets slider__bullets\" data-glide-el=\"controls[nav]\">\r\n        <button\r\n          class=\"glide__bullet\"\r\n          v-for=\"(item,index) in data\"\r\n          :key=\"index\"\r\n          :data-glide-dir=\"'='+index\"\r\n        ></button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport Glide, {\r\n  Controls,\r\n  Autoplay,\r\n  Swipe\r\n} from '@glidejs/glide/dist/glide.modular.esm'\r\n\r\nlet glide\r\nexport default {\r\n  name: 'Slider',\r\n  props: ['data'],\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      // todo avoid setTimeout\r\n      setTimeout(() => {\r\n        glide = new Glide('.slider__body', {\r\n          type: 'carousel',\r\n          autoplay: 3000,\r\n          animationDuration: 1000\r\n        }).mount({\r\n          Autoplay,\r\n          Controls,\r\n          Swipe\r\n        })\r\n      }, 2000)\r\n    })\r\n  },\r\n  destroyed() {\r\n    glide.destroy()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n@import 'node_modules/@glidejs/glide/src/assets/sass/glide.core';\r\n@import \"node_modules/@glidejs/glide/src/assets/sass/glide.theme\";\r\n</style>\r\n<style scoped lang=\"less\">\r\n@import (reference) '../../assets/css/constant.less';\r\n.slider {\r\n  padding-top: 5px;\r\n  position: relative;\r\n}\r\n.slider__body,\r\n.slider__track,\r\n.slider__slides {\r\n  height: 100%;\r\n}\r\n.slider__bullets {\r\n  bottom: 0.8em;\r\n}\r\n.slider__link,\r\n.slider__img {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Slider.vue?vue&type=template&id=810573d8&scoped=true\"\nimport script from \"./Slider.vue?vue&type=script&lang=js\"\nexport * from \"./Slider.vue?vue&type=script&lang=js\"\nimport style0 from \"./Slider.vue?vue&type=style&index=0&id=810573d8&lang=sass&scoped=true\"\nimport style1 from \"./Slider.vue?vue&type=style&index=1&id=810573d8&scoped=true&lang=less\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"810573d8\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <section class=\"new_song\">\r\n    <Slider :data=\"sliderData\" class=\"new_song__slider\"/>\r\n    <AppMusicList :music-list=\"newSongs\" class=\"new_song__music_list\"/>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport AppMusicList from '../public/AppMusicList'\r\nimport Slider from './Slider.vue'\r\nimport axios from 'axios'\r\nimport api from '../../assets/js/api'\r\nimport { mapState, mapMutations } from 'vuex'\r\nimport loading from '../../mixins/loading'\r\nexport default {\r\n  name: 'NewSong',\r\n  mixins: [loading],\r\n  computed: {\r\n    ...mapState('newSong', ['newSongs', 'sliderData'])\r\n  },\r\n  created() {\r\n    if (this.newSongs.length === 0) {\r\n      this.setLoadingExcludeNav()\r\n      this.startLoading()\r\n      this.getNewSong()\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(['replaceProperty']),\r\n    getNewSong() {\r\n      axios.get(api.newSong).then(({ data }) => {\r\n        this.replaceProperty({\r\n          paths: 'newSong.newSongs',\r\n          data: data.data\r\n        })\r\n        let banners = data.banner\r\n        this.replaceProperty({\r\n          paths: 'newSong.sliderData',\r\n          data: [...banners, banners[0]]\r\n        })\r\n        this.stopLoading()\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    AppMusicList,\r\n    Slider\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.new_song__slider {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 154px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSong.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewSong.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./NewSong.vue?vue&type=template&id=4dd44df9&scoped=true\"\nimport script from \"./NewSong.vue?vue&type=script&lang=js\"\nexport * from \"./NewSong.vue?vue&type=script&lang=js\"\nimport style0 from \"./NewSong.vue?vue&type=style&index=0&id=4dd44df9&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4dd44df9\",\n  null\n  \n)\n\nexport default component.exports","import { mapMutations } from 'vuex'\r\nexport default {\r\n  updated() {\r\n    this.stopLoading()\r\n  },\r\n  methods: {\r\n    ...mapMutations(['replaceProperty']),\r\n    startLoading() {\r\n      this.replaceProperty({\r\n        paths: 'loading.isShow',\r\n        data: true\r\n      })\r\n    },\r\n    stopLoading() {\r\n      this.replaceProperty({\r\n        paths: 'loading.isShow',\r\n        data: false\r\n      })\r\n    },\r\n    setLoadingExcludeHeader() {\r\n      this.replaceProperty({\r\n        paths: 'loading.sizeClassName',\r\n        data: 'loading--exclude_header'\r\n      })\r\n    },\r\n    setLoadingExcludeNav() {\r\n      this.replaceProperty({\r\n        paths: 'loading.sizeClassName',\r\n        data: 'loading--exclude_nav'\r\n      })\r\n    },\r\n    setLoadingExcludeModuleTitle() {\r\n      this.replaceProperty({\r\n        paths: 'loading.sizeClassName',\r\n        data: 'loading--exclude_module_title'\r\n      })\r\n    },\r\n    setLoadingExcludeSearchForm() {\r\n      this.replaceProperty({\r\n        paths: 'loading.sizeClassName',\r\n        data: 'loading--exclude_search_form'\r\n      })\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=style&index=0&id=810573d8&lang=sass&scoped=true\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slider.vue?vue&type=style&index=0&id=810573d8&lang=sass&scoped=true\""],"sourceRoot":""}